#!/usr/bin/env bash

set -eu

readonly DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
readonly BUILD="$DIR/../build/"
mkdir -p $BUILD

readonly SCALADIR="$DIR/../lib/scala.spfx/lang.scala.sdf3"
if [ ! -d "$SCALADIR" ]; then
    echo "FAILURE: Cannot find directory $SCALADIR"
    exit 1
fi

readonly SUNSHINE="$DIR/../bin/org.metaborg.sunshine2-2.5.2.jar"
if [ ! -f "$SUNSHINE" ]; then
    echo "FAILURE: Cannot find file $SUNSHINE"
    exit 1
fi

readonly ATERM="java -jar $SUNSHINE parse -l $SCALADIR -p . -i"

if true || test -t 1; then
   SUCCESS="[\e[32mSUCCESS\e[0m]"
   FAILURE="[\e[31mFAILURE\e[0m]"
   STUCK="[\e[34mSTUCK\e[0m]"
else
    SUCCESS="[SUCCESS]"
    FAILURE="[FAILURE]"
    STUCK="[STUCK]"
fi

function agree {
    [ $1 -eq 0 -a $2 -eq 0 ] || [ $1 -ne 0 -a $2 -ne 0 ]
}

for infile in "$@"
do
    if ! (echo $infile | grep -s "no.scala") 
    then
        positive=0
	echo "Expect pass"
    else
        positive=1
	echo "Expect fail"
    fi

    # make sure to remove all class files to avoid incidental capture
    rm -f $(dirname "$infile")/*.class

    # run scala compiler
    scalac -d $BUILD $infile 2>&1 | tee ${infile%.scala}.scalac.out 
    scala_ok=${PIPESTATUS[0]}

    # compile the file to an aterm
    sca=${infile%.scala}.sca3
    cp "$infile" $sca
    ${ATERM} $sca > ${infile%.scala}.aterm 2> /dev/null

    # run statix on the aterm
    statix check -I $DIR/../src/ scala ${infile%.scala}.aterm 2>&1 | tee ${infile%.scala}.stx.out
    stx_ok=${PIPESTATUS[0]}
    
    # compute test result by comparison
    if [ $stx_ok -eq 65 ]; then
        printf "$STUCK $infile"
    elif agree $stx_ok $scala_ok && agree $scala_ok $positive; then
        printf "$SUCCESS $infile"
    else
        printf "$FAILURE $infile"
    fi
done
