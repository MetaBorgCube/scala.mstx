import scala.def
import scala.imports

top-statements-ok(s, topstats) :- topstats match
  { st:stmts -> top-statement-ok(s, st), top-statements-ok(s, stmts)
  | []       -> true
  }.

stmts-ok(s_mod, s, stmts) :- stmts match
  { [] -> true
  | stmt:stmts -> {s'} stmt-ok(s_mod, s, stmt, s'), stmts-ok(s_mod, s', stmts)
  }.
  
block-statements-ok(s_mod, s, bstmts, s') :- bstmts match
  { [] -> s == s'
  | stmt:stmts -> {si} 
      block-statement-ok(s_mod, s, stmt, si), 
      block-statements-ok(s_mod, si, stmts, s')
  }.
  
block-statement-ok(s_mod, s, bstmt, s') :- bstmt match
  { DF2BS(def) -> def-ok(s_mod, s, def), s' == s
  }.

// top-level statements
top-statement-ok(s, stat) :- stat match

  // template definitions
  { DF2TS(ann, mod, def) -> template-def-ok(s, s, def)
  }.

stmt-ok(s_mod, s, stmt, s') :- stmt match

 // definitions
 { DF2TM(annot, modif, def) ->
     def-ok(s_mod, s, def)
     , s == s'

 // imports
 | IM2TM(imp) ->
     new s'
     , s' -[ `B ]-> s
     , import-ok(s', s, imp)

 }.
