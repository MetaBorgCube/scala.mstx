import stdlib.paths

import scala.type.reference
import scala.paths

iimport-ok(s, i) :- i match
  { ImportExpr(stable_id, grp) -> 
      iimports-stable-id(s, stable_id, grp)
  }.

iimports-stable-id(s, stable_id, grp) :- {psteps}
    path-to-list(stable_id, psteps)
  , psteps match { id:ids -> // paths have length at least one
      {s_obj}
        resolve-object(s, id, s_obj)
      , iimports-path-steps(s, s_obj, ids, grp)
    }.

iimports-path-steps(s, s_obj, psteps, grp) :- psteps match
  { [] -> grp match
      { IId(id) -> {lbl, s_iimport, decls}
          resolve-local-decl(s_obj, id, decls)
        , new s_iimport
        , s -[ `I ]-> s_iimport
        , copy-decls(s_iimport, decls)
      | IWild() ->
          s -[ `W ]-> s_obj
      }
  | id:ids -> {s_obj'}
      resolve-object(s_obj, id, s_obj')
    , iimports-path-steps(s, s_obj', ids, grp)
  }.

copy-decls(s, decls) :- decls match
  { [] -> true
  | p:ds -> {l, d}
      last(p, l, d)
      , l match
        { `VAL -> s -[ `VAL ]-> d
        | `TYPE -> s -[ `TYPE ]-> d
        }
      , copy-decls(s, ds)
  }.
